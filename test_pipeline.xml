<?xml version='1.1' encoding='UTF-8'?>
<flow-definition plugin="workflow-job@2.29">
  <actions>
    <org.jenkinsci.plugins.pipeline.modeldefinition.actions.DeclarativeJobAction plugin="pipeline-model-definition@1.3.4.1"/>
    <org.jenkinsci.plugins.pipeline.modeldefinition.actions.DeclarativeJobPropertyTrackerAction plugin="pipeline-model-definition@1.3.4.1">
      <jobProperties/>
      <triggers/>
      <parameters/>
      <options/>
    </org.jenkinsci.plugins.pipeline.modeldefinition.actions.DeclarativeJobPropertyTrackerAction>
  </actions>
  <description></description>
  <keepDependencies>false</keepDependencies>
  <properties>
    <io.fabric8.jenkins.openshiftsync.BuildConfigProjectProperty plugin="openshift-sync@1.0.27">
      <uid></uid>
      <namespace></namespace>
      <name></name>
      <resourceVersion></resourceVersion>
    </io.fabric8.jenkins.openshiftsync.BuildConfigProjectProperty>
  </properties>
  <definition class="org.jenkinsci.plugins.workflow.cps.CpsFlowDefinition" plugin="workflow-cps@2.61.1">
    <script>pipeline {
    agent any

    stages {
        stage(&apos;Building new config&apos;){
            steps{
                    build job: &apos;common/build&apos;, wait: true, parameters: [string(name: &apos;Project&apos;, value: &apos;webapps&apos;),string(name: &apos;Build&apos;, value: &apos;java&apos;)]
            }
        }
        stage(&apos;Verifying deploy&apos;){
            steps{
                    build job: &apos;common/verify_deployment&apos;, wait: true, parameters: [string(name: &apos;Project&apos;, value: &apos;webapps&apos;),string(name: &apos;Build&apos;, value: &apos;java&apos;)]
            }
        }
        stage(&apos;&quot;Verifying Service&apos;){
            steps{
                    build job: &apos;common/verify_service&apos;, wait: true, parameters: [string(name: &apos;Project&apos;, value: &apos;webapps&apos;),string(name: &apos;Build&apos;, value: &apos;java&apos;)]
            }
        }
       stage (&quot;Deleting temp files&quot;) {
            steps {
                sleep(time:5,unit:&quot;SECONDS&quot;)
            }
        }
        stage (&quot;Ending building&quot;) {
            steps {
                sleep(time:11,unit:&quot;SECONDS&quot;)
            }
        }
    }
}</script>
    <sandbox>true</sandbox>
  </definition>
  <triggers/>
  <disabled>false</disabled>
